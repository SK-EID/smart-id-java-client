name: Publish to maven repository

on:
  release:
    types:
      - published

permissions:
  contents: read

jobs:
  package_and_publish:
    name: Publish to maven repository
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Setup java SDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    -
      name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        #passphrase: ${{ secrets.PASSPHRASE }}

    - name: Create bundle and upload to oss.sonatype.org (staging)
      # Fail on first error
      run: |
        set -e
        version=${{ github.event.release.name }}
        artifact=smart-id-java-client-$version
        echo "[INFO] Artifact name: $artifact"
        ./mvnw versions:set -DnewVersion="$version"
        ./mvnw package -DskipTests
        rm -rf ee/sk/smartid/smart-id-java-client/$version
        mkdir ee/sk/smartid/smart-id-java-client/$version
        cp $artifact.jar  ee/sk/smartid/smart-id-java-client/$version/ 
        cp $artifact-sources.jar  ee/sk/smartid/smart-id-java-client/$version/                                        
        cp $artifact-javadoc.jar  ee/sk/smartid/smart-id-java-client/$version/
        cp ../pom.xml  ee/sk/smartid/smart-id-java-client/$version/$artifact.pom
        cd ee/sk/smartid/smart-id-java-client/$version
        gpg -ab $artifact.pom
        gpg -ab $artifact.jar
        gpg -ab $artifact-sources.jar
        gpg -ab $artifact-javadoc.jar
        find . -type f \( -name '*.jar' -o -name '*.pom' \) -exec sh -c 'for file; do sha256sum "$file" | cut -d " " -f 1 > "$file.sha256"; done' _ {} +
        find . -type f \( -name '*.jar' -o -name '*.pom' \) -exec sh -c 'for file; do sha1sum "$file" | cut -d " " -f 1 > "$file.sha1"; done' _ {} +
        find . -type f \( -name '*.jar' -o -name '*.pom' \) -exec sh -c 'for file; do md5sum "$file" | cut -d " " -f 1 > "$file.md5"; done' _ {} +
        cd ../../../../../
        zip bundle.zip ee/sk/smartid/smart-id-java-client/$version/*
        CODE=$(curl -w "%{http_code}" -o curl_response.txt -s --request POST --verbose --header 'Authorization: Bearer ${{ secrets.SONATYPETOKEN }}' --form bundle=@bundle.zip https://central.sonatype.com/api/v1/publisher/upload) 
        echo "[INFO] ------------------------------------------------------------------------"
        echo "[INFO] Upload to central.sonatype.com ResponseCode: $CODE"
        cat curl_response.txt
        echo -e "\n[INFO] Login to central.sonatype.com for releasing $artifact"
        echo "[INFO] ------------------------------------------------------------------------"
        [[ $CODE == 201 ]] && exit 0 || exit 1 
        